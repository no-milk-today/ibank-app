server:
  port: 8085
  forward-headers-strategy: native

app:
  config:
    external-base-url: http://localhost:8080   # URL, по которому браузер обращается к приложению (через API Gateway)
    keycloak-base-url: http://localhost:8080  # Внутренний docker hostname и порт контейнера keycloak

spring:
  application:
    name: front-ui
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: front-ui
            authorization-grant-type: authorization_code
            redirect-uri: "${app.config.external-base-url}/login/oauth2/code/{registrationId}"
            scope: openid,profile,email
        provider:
          keycloak:
            issuer-uri: ${app.config.keycloak-base-url}/realms/bank-realm  # Используем внешний URL Keycloak

keycloak:
  admin:
    server-url:  ${app.config.keycloak-base-url}
    realm:       bank-realm
    client-id:   front-ui-admin
    client-secret: front-ui-admin-secret

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka/  # Сервис Eureka по имени
  instance:
    hostname: front-ui

resilience4j:
  circuitbreaker:
    instances:
      customer-client:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
      exchange-client:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
      transfer-client:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
  retry:
    instances:
      customer-client:
        maxAttempts: 3
        waitDuration: 500ms
      exchange-client:
        maxAttempts: 3
        waitDuration: 500ms
      transfer-client:
        maxAttempts: 3
        waitDuration: 500ms
