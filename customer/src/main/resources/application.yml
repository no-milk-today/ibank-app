server:
  port: 8081
spring:
  application:
    name: customer
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/bank-realm

  datasource:
    url: jdbc:postgresql://localhost:5432/customer
    username: ${PG_USER}
    password: ${PG_PASSWORD}
    driver-class-name: org.postgresql.Driver # optional
  jpa:
    hibernate:
      ddl-auto: create-drop # Use 'create-drop' for development, 'update' for production
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true

  resilience4j:
    circuitbreaker:
      instances:
        fraudCheckService:
          registerHealthIndicator: true
          slidingWindowSize: 10
          minimumNumberOfCalls: 5
          failureRateThreshold: 50
          waitDurationInOpenState: 10s
    retry:
      instances:
        fraudCheckService:
          maxAttempts: 3
          waitDuration: 500ms

#  config:
#    import: ${SPRING_CONFIG_IMPORT:optional:configserver:http://localhost:8888}
#  cloud:
#    config:
#      retry:
#        initial-interval: 2000
#        max-attempts: 10
#        multiplier: 1.5

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
