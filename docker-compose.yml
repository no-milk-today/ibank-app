services:
  postgres:
    container_name: postgres-bank
    image: postgres:15
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  keycloak:
    container_name: keycloak-bank
    image: quay.io/keycloak/keycloak:26.1.3
    command: ["start-dev", "--import-realm"]
    ports:
      - "8090:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak/config:/opt/keycloak/data/import  # Монтируем папку с realm-файлом
    networks:
      - postgres
      - spring # для взаимодействия с Spring-сервисами
    depends_on:
      - postgres

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8761/actuator/health || exit 1" ]
      interval: 5s
      retries: 10
      start_period: 20s
  exchange:
    container_name: exchange
    build:
      context: ./exchange
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
    networks:
      - spring
      - postgres
    depends_on:
      - eureka-server
      - postgres
      - keycloak
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8086/actuator/health || exit 1" ]
      interval: 5s
      retries: 10
      start_period: 20s
  exchange-generator:
    container_name: exchange-generator
    build:
      context: ./exchange-generator
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_started
      keycloak:
        condition: service_started
      exchange:
        condition: service_healthy
  customer:
    container_name: customer
    build:
      context: ./customer
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PG_USER=${PG_USER}  # from .env file
      - PG_PASSWORD=${PG_PASSWORD}
    networks:
      - spring
      - postgres
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_started
      keycloak:
        condition: service_started
  fraud:
    container_name: fraud
    build:
      context: ./fraud
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
    networks:
      - spring
      - postgres
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_started
      keycloak:
        condition: service_started
  notification:
    container_name: notification
    build:
      context: ./notification
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
    networks:
      - spring
      - postgres
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_started
      keycloak:
        condition: service_started
  cash:
    container_name: cash
    build:
      context: ./cash
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_started
      keycloak:
        condition: service_started
  transfer:
    container_name: transfer
    build:
      context: ./transfer
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_started
      keycloak:
        condition: service_started
  front-ui:
    container_name: front-ui
    build:
      context: ./front-ui
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      eureka-server:
        condition: service_healthy
      keycloak:
        condition: service_started
  apigw:
    container_name: apigw
    build:
      context: ./apigw
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      eureka-server:
        condition: service_healthy

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin: