services:
  postgres:
    container_name: postgres-bank
    image: postgres:15
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  keycloak:
    container_name: keycloak-bank
    image: quay.io/keycloak/keycloak:26.1.3
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev"]
    ports:
      - "8090:8080"
    networks:
      - postgres # для доступа к БД
      - spring # для взаимодействия с Spring-сервисами
    restart: unless-stopped
    depends_on:
      - postgres

  eureka-server:
    image: ${REPO_NAME}/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8761/actuator/health || exit 1" ]
      interval: 5s
      retries: 10
      start_period: 20s
  config-server:
    image: ${REPO_NAME}/config-server:latest
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker,native
    networks:
      - spring
      - postgres
    depends_on:
      - eureka-server
    healthcheck:
      test: curl --fail http://localhost:8888/actuator/health || exit 1
      interval: 5s
      retries: 10
      start_period: 10s
  exchange:
    image: ${REPO_NAME}/exchange:latest
    container_name: exchange
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - eureka-server
      - postgres
      - keycloak
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8086/actuator/health || exit 1" ]
      interval: 5s
      retries: 10
      start_period: 20s
  exchange-generator:
    image: ${REPO_NAME}/exchange-generator:latest
    container_name: exchange-generator
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    networks:
      - spring
      - postgres
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_started
      keycloak:
        condition: service_started
      exchange:
        condition: service_healthy
#  customer:
#    image: ${REPO_NAME}/customer:latest
#    container_name: customer
#    ports:
#      - "8081:8081"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
#      - PG_USER=${PG_USER}  # from .env file
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - eureka-server
#      - config-server
#      - postgres
#      - keycloak
#      - exchange-generator
  apigw:
    image: ${REPO_NAME}/apigw:latest
    container_name: apigw
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - eureka-server

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin: