apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  serviceName: keycloak
  replicas: 1
  template:
    metadata:
      name: keycloak
      labels:
        app: keycloak
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: keycloak-data
          persistentVolumeClaim:
            claimName: keycloak-pc-volume-claim
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:26.1.3
          imagePullPolicy: IfNotPresent
          args:
            - "start-dev"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          volumeMounts:
            - mountPath: "/opt/keycloak/data"
              name: keycloak-data
          envFrom:
            - configMapRef:
                name: keycloak-config
          ports:
            - containerPort: 8080
              name: http
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /realms/master
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
      restartPolicy: Always
  selector:
    matchLabels:
      app: keycloak
